#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
    Node* child;
    Node(int val) : data(val), next(nullptr), child(nullptr) {}
};

Node* flatten(Node* head) {
    if (!head) return nullptr;
    Node* curr = head;
    while (curr) {
        if (curr->child) {
            Node* childList = flatten(curr->child);
            Node* nextNode = curr->next;
            curr->next = childList;

            Node* tail = childList;
            while (tail->next) {
                tail = tail->next;
            }

            tail->next = nextNode;
            curr->child = nullptr;
        }
        curr = curr->next;
    }
    return head;
}

void printList(Node* head) {
    while (head) {
        cout << head->data << " ";
        head = head->next;
    }
    cout << endl;
}

int main() {
    Node* head = new Node(1);
    head->next = new Node(2);
    head->next->next = new Node(3);
    head->next->next->next = new Node(4);

    head->next->child = new Node(7);
    head->next->child->next = new Node(8);
    head->next->child->next->child = new Node(11);
    head->next->child->next->child->next = new Node(12);

    head->next->child->next->next = new Node(9);
    head->next->child->next->next->next = new Node(10);

    Node* flatHead = flatten(head);
    printList(flatHead);

    return 0;
}
